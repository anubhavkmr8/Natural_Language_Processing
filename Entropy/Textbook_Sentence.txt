A common approach for handling address spaces is to use a with the hash value being the virtual page number Each entry in the hash table contains a linked list of elements that hash to the same location to handle collisions Each element consists of three fields the virtual page number the value of the mapped page frame and a pointer to the next element in the linked list The algorithm works as follows The virtual page number in the virtual address is hashed into the hash table The virtual page number is compared with field in the first element in the linked list If there is a match the corresponding page frame field is used to form the desired physical address If there is no match subsequent entries in the linked list are searched for a matching virtual page number This scheme is shown in Figure A variation of this scheme that is favourable for 64-bit address spaces has been proposed This variation uses which are similar to hashed page tables except that each entry in the hash table refers to several pages rather than a single page Therefore a single page table entry can store the mappings for multiple physical page frames Clustered page tables are particularly useful for address spaces where memory references are noncontiguous and scattered throughout the address space